<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>1 - The Flyweight pattern is a optimization for better usage of ram and must used when there's no other option.

2 - The Flyweight class is responsible for holding the states that can be shared with other objects, the internal states of the Flyweight are called intrinsic and the external states passed to the Flyweight are called extrinsic.

3 - The Context class holds the data that is unique to a expecific object, and are paired to a Flyweight to represent the full state of the original object.

4 - The client is responsible for calculating and storing the extrinsic states of the Flyweight objects, it is also resposible for passing those states to the Flyweights.

5 - The FlyweightFactory can be used to better manage the flyweights and avoid creating them unnecessarily.</help_text><element><id>UMLClass</id><coordinates><x>410</x><y>180</y><w>100</w><h>30</h></coordinates><panel_attributes>Client</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>350</x><y>270</y><w>220</w><h>110</h></coordinates><panel_attributes>Context
--
- uniqueState
- flyweight
--
+ Context(repeatingState, uniqueState)
+ operation()</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>200</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;
bg=white</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>70</x><y>160</y><w>190</w><h>80</h></coordinates><panel_attributes>FlyweightFactory
--
- cache: Flyweight[]
--
+ getFlyweight(repeatingState)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>250</x><y>200</y><w>140</w><h>90</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;120;10;120;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>80</x><y>410</y><w>190</w><h>80</h></coordinates><panel_attributes>Flyweight
--
- repeatingState
--
+ operation(uniqueState)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>260</x><y>370</y><w>130</w><h>120</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;100;110;100;110;10</additional_attributes></element><element><id>Relation</id><coordinates><x>100</x><y>230</y><w>30</w><h>200</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;
layer=0</panel_attributes><additional_attributes>10;10;10;180</additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>40</y><w>340</w><h>100</h></coordinates><panel_attributes>if (this.cache[repeatingState] == null) {
    this.cache[repeatingState] = new Flyweight(repeatingState)
}

return this.cache[repeatingState];</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>10</x><y>130</y><w>80</w><h>100</h></coordinates><panel_attributes>lt=..</panel_attributes><additional_attributes>10;10;10;80;60;80</additional_attributes></element><element><id>UMLNote</id><coordinates><x>50</x><y>280</y><w>260</w><h>50</h></coordinates><panel_attributes>this.uniqueState = uniqueState
this.flyweight = new Flyweight(repeatingState)
layer=0
bg=#282A36
transparency=0
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>300</x><y>310</y><w>70</w><h>50</h></coordinates><panel_attributes>lt=..</panel_attributes><additional_attributes>10;10;50;30</additional_attributes></element><element><id>UMLNote</id><coordinates><x>390</x><y>400</y><w>240</w><h>30</h></coordinates><panel_attributes>this.flyweight.operation(this.uniqueState)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>400</x><y>350</y><w>130</w><h>70</h></coordinates><panel_attributes>lt=..</panel_attributes><additional_attributes>10;10;110;50</additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>150</x><y>360</y><w>40</w><h>40</h></coordinates><panel_attributes>bg=black
transparency=0
layer=0
1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>250</x><y>400</y><w>40</w><h>40</h></coordinates><panel_attributes>bg=black
transparency=0
layer=0
2</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>540</x><y>260</y><w>40</w><h>40</h></coordinates><panel_attributes>bg=black
transparency=0
layer=0
3</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>490</x><y>160</y><w>40</w><h>40</h></coordinates><panel_attributes>bg=black
transparency=0
layer=0
4</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>240</x><y>150</y><w>40</w><h>40</h></coordinates><panel_attributes>bg=black
transparency=0
layer=0
5</panel_attributes><additional_attributes></additional_attributes></element></diagram>